{"version":3,"sources":["services/phoneBook.js","App.js","index.js"],"names":["baseUrl","phoneBook","axios","get","then","response","data","contact","post","contactID","delete","concat","updatedContact","put","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","newNum","setNewNum","_useState7","_useState8","filter","setFilter","useEffect","console","log","contacts","deletePrompt","person","id","name","window","confirm","react_default","a","createElement","value","onChange","e","target","onSubmit","preventDefault","reduce","match","undefined","every","number","newContact","toConsumableArray","map","type","toLowerCase","includes","contactFilter","i","key","onClick","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b7db6cb2.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst baseUrl = '/api/phonebook';\n\nconst getBook = () => {\n  let req = axios.get(baseUrl)\n  return req.then(response => response.data)\n};\n\nconst newContact = (contact) => {\n  let req = axios.post(baseUrl, contact)\n  return req.then(response => response.data)\n}\n\nconst deleteContact = (contactID) => {\n  return axios.delete(`${baseUrl}/${contactID}`)\n}\n\nconst changeNumber = (contactID, updatedContact) => {\n  let req = axios.put(`${baseUrl}/${contactID}`, updatedContact)\n  return req.then(response => response.data)\n}\n\nexport default {\n  getBook,\n  newContact,\n  deleteContact,\n  changeNumber\n}","import React, { useState, useEffect } from 'react'\nimport phoneBook from './services/phoneBook'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNum, setNewNum] = useState('')\n  const [filter, setFilter] = useState('')\n\n  useEffect(() => {\n    console.log('effect')\n    phoneBook\n      .getBook()\n      .then(contacts => setPersons(contacts))\n  }, [])\n\n  const updateBook = (e) => {\n    e.preventDefault();\n    const id = persons.reduce((match, persons) => {\n      if (persons.name === newName) return persons.id\n      return match;\n    }, undefined)\n\n    if (!persons.every((person) => person.name !== newName)) {\n      if (window.confirm(`${newName} exists already, would you like to replace the number with the one provided?`)) {\n        phoneBook\n          .changeNumber(id, {name: newName, number: newNum})\n          .then((updatedContact) => setPersons(persons.map((person) => \n            person.id === updatedContact.id ? updatedContact : person\n          )))\n      };\n      return;\n    }\n\n    let person = {\n      name: newName,\n      number: newNum\n    }\n\n    phoneBook.newContact(person)\n      .then((newContact) => {\n        setPersons([...persons, newContact])\n        setNewName('')\n        setNewNum('')\n      })\n  }\n\n  const numbers = (contactList) => contactList.map((person, i) => {\n    return (\n    <div key={person.name}>\n      {person.name} {person.number}\n      <button onClick={() => deletePrompt(person)}>Delete contact</button>\n    </div>\n    )\n  })\n\n  const deletePrompt = (person) => {\n    let { id, name } = person;\n    if (window.confirm(`Do you really want to delete ${name}`)) {\n      phoneBook.deleteContact(id)\n      .then(() => setPersons(persons.filter((person) => person.id !== id)))\n    }\n  }\n\n  const contactFilter = () => {\n    const match = filter.toLowerCase();\n    return persons.filter(person => person.name.toLowerCase().includes(match))\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <div>\n        filter for: <input value={filter} onChange={(e) => setFilter(e.target.value)} />\n      </div>\n      <h3>Add a new</h3>\n      <form onSubmit={updateBook}>\n        <div>\n          name: <input value={newName} onChange={(e) => setNewName(e.target.value)} />\n        </div>\n        <div>\n          number: <input value={newNum} onChange={(e) => setNewNum(e.target.value)} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      {numbers(contactFilter())}\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}